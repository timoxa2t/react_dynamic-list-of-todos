{"version":3,"sources":["helpers.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/UserInfo/UserInfo.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filters","TodoItem","todo","handleSelectTodo","selected","id","title","completed","className","classNames","type","onClick","TodoList","todos","selectedTodo","map","TodoFilter","setFilterBy","setQuery","timeoutId","useRef","useState","queryValue","setQueryValue","showClearSearch","useEffect","clearTimeout","current","handleFilterChange","useCallback","event","target","value","All","Active","Completed","handleClearSearch","handleQueryChange","window","setTimeout","trim","toLowerCase","onChange","Object","entries","key","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","then","fetch","res","json","getUser","userId","Loader","UserInfo","user","isCompleted","name","email","href","TodoModal","setSelectedTodo","isLoading","setIsLoading","setUser","error","setError","loadUserFromServer","a","result","Error","message","handleKeyPress","document","addEventListener","removeEventListener","Alert","variant","App","setTodos","filterBy","query","filteredTodos","useMemo","filter","groupFilter","queryFilter","includes","loadTodosFromServer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.545dd408.chunk.js","sourcesContent":["export enum Filters {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  handleSelectTodo: (todo: Todo) => void,\n  selected: boolean,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  handleSelectTodo,\n  selected,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-success': completed,\n            'has-text-danger': !completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => handleSelectTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i\n              className={classNames({\n                'far fa-eye-slash': selected,\n                'far fa-eye': !selected,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[],\n  handleSelectTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleSelectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id } = todo;\n        const selected = selectedTodo !== null && selectedTodo.id === id;\n\n        return (\n          <TodoItem\n            key={id}\n            todo={todo}\n            handleSelectTodo={handleSelectTodo}\n            selected={selected}\n          />\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import {\n  ChangeEvent,\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\nimport { Filters } from '../../helpers';\n\ntype Props = {\n  setFilterBy: (filterBy: Filters) => void,\n  setQuery: (query: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterBy,\n  setQuery,\n}) => {\n  const timeoutId = useRef(0);\n  const [queryValue, setQueryValue] = useState('');\n  const showClearSearch = queryValue !== '';\n\n  useEffect(\n    () => () => {\n      clearTimeout(timeoutId.current);\n    },\n    [],\n  );\n\n  const handleFilterChange = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      switch (event.target.value) {\n        case Filters.All:\n          setFilterBy(Filters.All);\n          break;\n        case Filters.Active:\n          setFilterBy(Filters.Active);\n          break;\n        case Filters.Completed:\n          setFilterBy(Filters.Completed);\n          break;\n        default:\n          setFilterBy(Filters.All);\n      }\n    },\n    [],\n  );\n\n  const handleClearSearch = useCallback(() => {\n    setQuery('');\n    setQueryValue('');\n  }, []);\n\n  const handleQueryChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const { value } = event.target;\n\n      setQueryValue(value);\n      clearTimeout(timeoutId.current);\n      timeoutId.current = window.setTimeout(\n        () => setQuery(value.trim().toLowerCase()),\n        500,\n      );\n    },\n    [],\n  );\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilterChange}\n          >\n            {Object.entries(Filters).map(([key, value]) => (\n              <option key={`${value}-${key}`} value={value}>{key}</option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={queryValue}\n          onChange={handleQueryChange}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {showClearSearch && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n  isCompleted: boolean,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user, isCompleted }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <p className=\"block\" data-cy=\"modal-user\">\n      <strong\n        className={classNames({\n          'has-text-success': isCompleted,\n          'has-text-danger': !isCompleted,\n        })}\n      >\n        {isCompleted ? 'Done' : 'Planned'}\n      </strong>\n\n      {' by '}\n\n      <a href={`mailto:${email}`}>\n        {name}\n      </a>\n    </p>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  setSelectedTodo: (todo: Todo | null) => void,\n  selectedTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const [error, setError] = useState('');\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  const loadUserFromServer = useCallback(async () => {\n    try {\n      const result = await getUser(userId);\n\n      setUser(result);\n      setError('');\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadUserFromServer();\n  }, []);\n\n  const handleKeyPress = useCallback((event: KeyboardEvent) => {\n    if (event.key === 'x') {\n      setSelectedTodo(null);\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyPress);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n\n            {user !== null && (\n              <UserInfo user={user} isCompleted={completed} />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport Alert from 'react-bootstrap/Alert';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filters } from './helpers';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState(Filters.All);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSelectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const filteredTodos = useMemo(\n    () => todos.filter(todo => {\n      const { completed, title } = todo;\n      const queryFilter = query === ''\n        || title.toLowerCase().includes(query);\n      let groupFilter;\n\n      switch (filterBy) {\n        case Filters.Active:\n          groupFilter = !completed;\n          break;\n        case Filters.Completed:\n          groupFilter = completed;\n          break;\n        default:\n          groupFilter = true;\n      }\n\n      return queryFilter && groupFilter;\n    }),\n    [filterBy, todos, query],\n  );\n\n  const loadTodosFromServer = useCallback(async () => {\n    try {\n      const result = await getTodos();\n\n      setTodos(result);\n      setError('');\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadTodosFromServer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterBy={setFilterBy}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {error && <Alert variant=\"danger\">{error}</Alert>}\n\n              {isLoading && !error\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    handleSelectTodo={handleSelectTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && (\n        <TodoModal\n          setSelectedTodo={setSelectedTodo}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}