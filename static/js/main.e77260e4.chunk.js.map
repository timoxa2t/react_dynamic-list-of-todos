{"version":3,"sources":["helpers.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/UserInfo/UserInfo.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filters","TodoItem","todo","handleSelectTodo","selected","id","title","completed","className","type","onClick","TodoList","todos","selectedTodo","map","timeoutId","TodoFilter","setFilterBy","setQuery","useState","queryValue","setQueryValue","showClearSearch","useEffect","clearTimeout","onChange","event","target","value","All","Active","Completed","placeholder","window","setTimeout","trim","toLowerCase","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","then","fetch","res","json","Loader","UserInfo","user","name","email","href","TodoModal","setSelectedTodo","isLoading","setIsLoading","setUser","userId","getUser","result","handleKeyPress","key","document","addEventListener","removeEventListener","App","setTodos","filterBy","query","filteredTodos","useMemo","filter","groupFilter","queryFilter","includes","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e77260e4.chunk.js","sourcesContent":["export enum Filters {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  handleSelectTodo: (todo: Todo) => void,\n  selected: boolean,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  handleSelectTodo,\n  selected,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={completed ? 'has-text-success' : 'has-text-danger'}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => handleSelectTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={selected ? 'far fa-eye-slash' : 'far fa-eye'} />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[],\n  handleSelectTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleSelectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id } = todo;\n        const selected = selectedTodo !== null && selectedTodo.id === id;\n\n        return (\n          <TodoItem\n            key={id}\n            todo={todo}\n            handleSelectTodo={handleSelectTodo}\n            selected={selected}\n          />\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { ChangeEvent, useState, useEffect } from 'react';\nimport { Filters } from '../../helpers';\n\ntype Props = {\n  setFilterBy: (filterBy: Filters) => void,\n  setQuery: (query: string) => void,\n};\n\nlet timeoutId = 0;\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterBy,\n  setQuery,\n}) => {\n  const [queryValue, setQueryValue] = useState('');\n  const showClearSearch = queryValue !== '';\n\n  useEffect(\n    () => () => {\n      clearTimeout(timeoutId);\n    },\n    [],\n  );\n\n  const handleFilterChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case Filters.All:\n        setFilterBy(Filters.All);\n        break;\n      case Filters.Active:\n        setFilterBy(Filters.Active);\n        break;\n      case Filters.Completed:\n        setFilterBy(Filters.Completed);\n        break;\n      default:\n        setFilterBy(Filters.All);\n    }\n  };\n\n  const handleClearSearch = () => {\n    setQuery('');\n    setQueryValue('');\n  };\n\n  const handleQueryChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQueryValue(value);\n    clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(\n      () => setQuery(value.trim().toLowerCase()),\n      500,\n    );\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilterChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={queryValue}\n          onChange={handleQueryChange}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {showClearSearch && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n  completed: boolean,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user, completed }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <p className=\"block\" data-cy=\"modal-user\">\n      {completed\n        ? <strong className=\"has-text-success\">Done</strong>\n        : <strong className=\"has-text-danger\">Planned</strong>}\n\n      {' by '}\n\n      <a href={`mailto:${email}`}>\n        {name}\n      </a>\n    </p>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  setSelectedTodo: (todo: null) => void,\n  selectedTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then((result) => {\n        setUser(result);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === 'x') {\n      setSelectedTodo(null);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyPress);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            {user !== null && (\n              <UserInfo user={user} completed={completed} />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filters } from './helpers';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [todos, setTodos] = useState([] as Todo[]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState(Filters.All);\n  const [query, setQuery] = useState('');\n\n  const handleSelectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const filteredTodos = useMemo(\n    () => todos.filter(todo => {\n      const { completed, title } = todo;\n      const queryFilter = query === ''\n        || title.toLowerCase().includes(query);\n      let groupFilter;\n\n      switch (filterBy) {\n        case Filters.Active:\n          groupFilter = !completed;\n          break;\n        case Filters.Completed:\n          groupFilter = completed;\n          break;\n        default:\n          groupFilter = true;\n      }\n\n      return queryFilter && groupFilter;\n    }),\n    [filterBy, todos, query],\n  );\n\n  useEffect(() => {\n    getTodos()\n      .then(result => {\n        setTodos(result);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterBy={setFilterBy}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    handleSelectTodo={handleSelectTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && (\n        <TodoModal\n          setSelectedTodo={setSelectedTodo}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}